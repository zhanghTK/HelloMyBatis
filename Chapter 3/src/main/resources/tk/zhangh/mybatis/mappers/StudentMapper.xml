<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="tk.zhangh.mybatis.mappers.StudentMapper">
    <!-- 声明StudentResult类型-->
    <resultMap id="StudentResult" type="Student">
        <id property="studId" column="stud_id"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <result property="phone" column="phone"/>
    </resultMap>

    <resultMap type="Student" id="StudentWithAddressExtResult" extends="StudentResult">
        <result property="address.addrId" column="addr_id"/>
        <result property="address.street" column="street"/>
        <result property="address.city" column="city"/>
        <result property="address.state" column="state"/>
        <result property="address.zip" column="zip"/>
        <result property="address.country" column="country"/>
    </resultMap>

    <resultMap type="Student" id="StudentWithAddressNestedSelect">
        <id property="studId" column="stud_id"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <association property="address" column="addr_id" select="tk.zhangh.mybatis.mappers.AddressMapper.selectAddressById"/>
    </resultMap>

    <resultMap type="Student" id="StudentWithAddressNestedResultMap">
        <id property="studId" column="stud_id"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <association property="address" javaType="Address">
            <id property="addrId" column="addr_id"/>
            <result property="street" column="street"/>
            <result property="city" column="city"/>
            <result property="state" column="state"/>
            <result property="zip" column="zip"/>
            <result property="country" column="country"/>
        </association>
    </resultMap>

    <!-- resultMap指定返回类型-->
    <select id="findAllStudents" resultMap="StudentResult">
        select * from Students
    </select>

    <!-- select * from Students where stud_id=? -->
    <!-- SELECT * FROM addresses WHERE ADDR_ID=? -->
    <select id="findStudentById" parameterType="int" resultMap="StudentWithAddressNestedSelect">
        select * from Students where stud_id=#{studId}
    </select>

    <!-- select stud_id, name, email,phone, a.addr_id, street, city, state, zip, country
        FROM students s left outer join addresses a on s.addr_id=a.addr_id
        where stud_id=? -->
    <select id="selectStudentWithAddress" parameterType="int" resultMap="StudentWithAddressNestedResultMap">
        select stud_id, name, email,phone, a.addr_id, street, city, state, zip, country
        FROM students s left outer join addresses a on s.addr_id=a.addr_id
        where stud_id=#{studId}
    </select>

    <!-- useGeneratedKeys 自动生成主键列-->
    <!-- insert into students(name,email,addr_id, phone) values(?,?,?,?) -->
    <insert id="insertStudent" parameterType="Student" useGeneratedKeys="true" keyProperty="studId">
        insert into students(name,email,addr_id, phone)
        values(#{name},#{email},#{address.addrId},#{phone})
    </insert>

    <!-- insert into students(name,email,addr_id,phone) values(?,?,?,?)-->
    <insert id="insertStudentWithMap" parameterType="hashmap" useGeneratedKeys="true" keyProperty="studId">
        insert into students(name,email,addr_id,phone)
        values(#{name},#{email},#{address.addrId},#{phone})
    </insert>

    <!-- update students SET name=?, email=? where stud_id=? -->
    <update id="updateStudent" parameterType="Student">
        update students
        <!-- set
        name=#{name},
        email=#{email},
        phone=#{phone}
        where stud_id=#{studId} -->

        <set>
            <if test="name != null">name=#{name},</if>
            <if test="email != null">email=#{email},</if>
            <if test="phone != null">phone=#{phone},</if>
        </set>
        where stud_id=#{studId}
    </update>

    <!-- update students SET name=?, email=? where stud_id=? -->
    <delete id="deleteStudent" parameterType="int">
        delete from students where stud_id=#{studId}
    </delete>
</mapper>